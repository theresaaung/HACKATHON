[gd_scene load_steps=3 format=3 uid="uid://c4wusekmxx21w"]

[ext_resource type="AudioStream" uid="uid://cu7xci27vasjf" path="res://Button Click.mp3" id="1_6e84v"]

[sub_resource type="GDScript" id="GDScript_y32ns"]
script/source = "extends Node2D

@onready var button: Button = $Button
@onready var notify_panel: PanelContainer = $PanelContainer            # template (hidden)
@onready var notify_label: Label = $PanelContainer/Label               # template label
@onready var feed_scroll: ScrollContainer = $FeedScroll
@onready var feed: VBoxContainer = $FeedScroll/Feed
@onready var click: AudioStreamPlayer2D = $Click

var messages := [
	\"The local eco farm that you have been sourcing food from has got mad cow disease! Results in lower profits from less food.\",
	\"Week-long storm, no sunlight for a week, cant use solar panels.\",
	\"The supplier of biodegradable packaging goes bankrupt. Hence, the supermarkets have to switch back to using plastic alternatives.\",
	\"Recycling workers go on a strike due to low wage and hence all the recycling piles up.\",
	\"A food bank that the supermarket donates to has reached capacity. Hence, unsold food needs to be thrown away increasing disposable costs.\",
	\"New eco-friendly food absorbs moisture and damages food.\",
	\"A fuel shortage hits the country due to which electric vans became overused and difficult to recharge causing delays.\",
	\"Droughts in Spain ruin crops that the supermarket imports like tomatoes and hence price rises, availability falls and profits decline.\",
	\"Political conflicts disturb shipping routes, hence imported eco crops decline and forcing the supermarket to go back to non sustainable options.\"
]

 # kept to avoid big changes; no longer used

func _ready() -> void:
	_setup_notification_style()
	# use PanelContainer only as a template
	notify_panel.visible = false

func _on_button_pressed() -> void:
	_show_notification(_random_message())
	click.play()

func _random_message() -> String:
	return messages.pick_random()

func _setup_notification_style() -> void:
	# Make the panel look like a phone toast (applies to template; duplicates inherit it)
	var sb := StyleBoxFlat.new()
	sb.bg_color = Color(\"#121212\")
	sb.corner_radius_top_left = 14
	sb.corner_radius_top_right = 14
	sb.corner_radius_bottom_left = 14
	sb.corner_radius_bottom_right = 14
	sb.set_border_width_all(0)
	sb.shadow_size = 10
	sb.shadow_color = Color(0, 0, 0, 0.5)
	sb.expand_margin_left = 8
	sb.expand_margin_right = 8
	sb.expand_margin_top = 8
	sb.expand_margin_bottom = 8
	notify_panel.add_theme_stylebox_override(\"panel\", sb)

	# Label aesthetics (template)
	notify_label.add_theme_color_override(\"font_color\", Color(\"#FEFEFE\"))
	notify_label.add_theme_constant_override(\"line_spacing\", 2)
	notify_label.autowrap_mode = TextServer.AUTOWRAP_WORD_SMART

	# Nice padding inside the panel
	notify_panel.add_theme_constant_override(\"margin_left\", 14)
	notify_panel.add_theme_constant_override(\"margin_right\", 14)
	notify_panel.add_theme_constant_override(\"margin_top\", 10)
	notify_panel.add_theme_constant_override(\"margin_bottom\", 10)

	# Compact toast width and stretch to feed width
	notify_panel.custom_minimum_size = Vector2(520, 0)
	notify_panel.size_flags_horizontal = Control.SIZE_EXPAND_FILL

	# Feed spacing
	feed.add_theme_constant_override(\"separation\", 8)

# --- New behavior: add a new toast to the feed each press ---
func _show_notification(text: String) -> void:
	# Duplicate the template so it carries all styling
	var toast := notify_panel.duplicate() as PanelContainer
	var label := toast.get_node(\"Label\") as Label
	label.text = text
	toast.visible = true
	toast.modulate.a = 0.0
	toast.scale = Vector2(0.98, 0.98)
	toast.size_flags_horizontal = Control.SIZE_EXPAND_FILL

	# Add newest to top
	feed.add_child(toast)
	feed.move_child(toast, 0)

	# Animate a quick fade/scale pop-in (position is managed by VBoxContainer)
	var tw := create_tween().set_trans(Tween.TRANS_CUBIC).set_ease(Tween.EASE_OUT)
	tw.tween_property(toast, \"modulate:a\", 1.0, 0.18)
	tw.parallel().tween_property(toast, \"scale\", Vector2.ONE, 0.18)

	# Make sure the newest toast is visible (scroll to top)
	await get_tree().process_frame
	feed_scroll.scroll_vertical = 0
"

[node name="Node2D" type="Node2D"]
script = SubResource("GDScript_y32ns")

[node name="PanelContainer" type="PanelContainer" parent="."]
offset_left = 232.0
offset_top = 406.0
offset_right = 848.0
offset_bottom = 609.0

[node name="Label" type="Label" parent="PanelContainer"]
layout_mode = 2
text = "Notifications"

[node name="FeedScroll" type="ScrollContainer" parent="."]
offset_left = 224.0
offset_top = 396.0
offset_right = 855.0
offset_bottom = 608.0

[node name="Feed" type="VBoxContainer" parent="FeedScroll"]
layout_mode = 2
